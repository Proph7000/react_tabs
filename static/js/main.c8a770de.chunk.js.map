{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onClick","className","map","tab","isSelected","id","classNames","href","event","title","find","content","App","state","copyTabs","selectedId","setTab","element","target","setState","getAttribute","slice","this","Component","ReactDOM","render","document","getElementById"],"mappings":"uOAUaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,QAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGH,EAAKI,KAAI,SAACC,GACT,IAAIC,GAAa,EAMjB,OAJID,EAAIE,KAAON,IACbK,GAAa,GAIb,oBACEH,UAAWK,IACT,CACE,YAAaF,IAGjB,UAAQ,MANV,SASE,mBACEG,KAAI,WAAMJ,EAAIE,IACd,UAAQ,UACRL,QAAS,SAACQ,GACHJ,GACHJ,EAAQQ,IALd,SASIL,EAAIM,SAXHN,EAAIE,WAmBnB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,mBACIH,EAAKY,MACL,SAAAP,GAAG,OAAIJ,IAAkBI,EAAIE,aAFjC,aACI,EAECM,cCjDEb,EAAO,CAClB,CAAEO,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,gBAQ7BC,EAAb,4MACEC,MAAyB,CACvBC,SAAUhB,EACViB,WAAYjB,EAAK,GAAGO,IAHxB,EAMEW,OAAS,SAACR,GAAgD,IAAD,EACjDS,EAAUT,EAAMU,OAEtB,EAAKC,SAAS,CACZJ,WAAU,UAAEE,EAAQG,aAAa,eAAvB,aAAE,EAA8BC,MAAM,MAVtD,4CAcE,WAAU,IAAD,EACP,EAAiCC,KAAKT,MAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKd,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IAFH,UAGIa,EAASJ,MACT,SAAAP,GAAG,OAAIA,EAAIE,KAAOU,YAJtB,aAGI,EAECN,SAGL,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAegB,EACff,QAASsB,KAAKN,gBA9BxB,GAAyBO,aCfzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c8a770de.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../Type/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onClick: React.MouseEventHandler<HTMLAnchorElement>,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onClick,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            let isSelected = false;\n\n            if (tab.id === selectedTabId) {\n              isSelected = true;\n            }\n\n            return (\n              <li\n                className={classNames(\n                  {\n                    'is-active': isSelected,\n                  },\n                )}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={(event) => {\n                    if (!isSelected) {\n                      onClick(event);\n                    }\n                  }}\n                >\n                  { tab.title }\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(tabs.find(\n          tab => selectedTabId === tab.id,\n        )?.content)}\n      </div>\n    </div>\n  );\n};\n","import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Type/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype State = {\n  copyTabs: Tab[],\n  selectedId: string,\n};\n\nexport class App extends Component {\n  state: Readonly<State> = {\n    copyTabs: tabs,\n    selectedId: tabs[0].id,\n  };\n\n  setTab = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const element = event.target as HTMLAnchorElement;\n\n    this.setState({\n      selectedId: element.getAttribute('href')?.slice(1),\n    });\n  };\n\n  render() {\n    const { copyTabs, selectedId } = this.state;\n\n    return (\n      <div className=\"section\">\n        <h1 className=\"title\">\n          Selected tab is\n          {' '}\n          {(copyTabs.find(\n            tab => tab.id === selectedId,\n          )?.title)}\n        </h1>\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedId}\n          onClick={this.setTab}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}